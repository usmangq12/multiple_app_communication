{"version":3,"file":"static/js/733.e54a18ad.chunk.js","mappings":"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","sources":["app3/FlowDiagram.jsx"],"sourcesContent":["import React, { useCallback } from \"react\";\nimport {\n  ReactFlow,\n  Background,\n  useNodesState,\n  useEdgesState,\n  addEdge,\n  getIncomers,\n  getOutgoers,\n  getConnectedEdges,\n  Handle,\n} from \"@xyflow/react\";\nimport \"@xyflow/react/dist/style.css\";\n\nconst CustomNode1 = ({ data }) => {\n  return (\n    <div style={{ padding: 10, border: '1px solid #777', borderRadius: 5, backgroundColor: 'lightblue' }}>\n      <div style={{ marginBottom: 5 }}>{data.label}</div>\n      <svg width=\"100\" height=\"50\">\n        <circle cx=\"25\" cy=\"25\" r=\"20\" fill=\"orange\" />\n        <line x1=\"25\" y1=\"25\" x2=\"75\" y2=\"25\" stroke=\"black\" strokeWidth=\"2\" />\n        <rect x=\"75\" y=\"15\" width=\"20\" height=\"20\" fill=\"green\" />\n      </svg>\n      <Handle type=\"target\" position=\"top\" />\n      <Handle type=\"source\" position=\"bottom\" />\n    </div>\n  );\n};\n\n\nconst CustomNode2 = ({ data }) => {\n  return (\n    <div style={{ padding: 10, border: '1px solid #777', borderRadius: 5, backgroundColor: 'lightgreen' }}>\n      <div style={{ marginBottom: 5 }}>{data.label}</div>\n      {/* Small Diagram for Custom Node 2 */}\n      <svg width=\"100\" height=\"50\">\n        <rect x=\"10\" y=\"10\" width=\"30\" height=\"30\" fill=\"red\" />\n        <circle cx=\"70\" cy=\"25\" r=\"15\" fill=\"blue\" />\n        <line x1=\"10\" y1=\"10\" x2=\"70\" y2=\"25\" stroke=\"black\" strokeWidth=\"2\" />\n      </svg>\n      <Handle type=\"target\" position=\"top\" />\n      <Handle type=\"source\" position=\"bottom\" />\n    </div>\n  );\n};\n\nconst initialNodes = [\n  {\n    id: \"1\",\n    type: \"input\",\n    data: { label: \"Start here...\" },\n    position: { x: -150, y: 0 },\n  },\n  {\n    id: \"2\",\n    type: \"input\",\n    data: { label: \"...or here!\" },\n    position: { x: 150, y: 0 },\n  },\n  {\n    id: \"3\",\n    type: \"customNode1\",\n    data: { label: \"Custom Node 1\" },\n    position: { x: 0, y: 150 },\n  },\n  {\n    id: \"4\",\n    type: \"customNode2\",\n    data: { label: \"Custom Node 2\" },\n    position: { x: -150, y: 300 },\n  },\n  {\n    id: \"5\",\n    type: \"output\",\n    data: { label: \"End here!\" },\n    position: { x: 150, y: 350 },\n  },\n  {\n    id: \"6\",\n    type: \"output\",\n    data: { label: \"End here!\" },\n    position: { x: -150, y: 500 },\n  },\n];\n\nconst initialEdges = [\n  { id: \"1->3\", source: \"1\", target: \"3\" },\n  { id: \"2->3\", source: \"2\", target: \"3\" },\n  { id: \"3->4\", source: \"3\", target: \"4\" },\n  { id: \"3->5\", source: \"3\", target: \"5\" },\n  {id : \"4->6\", source: \"4\", target: \"6\"}\n];\n\nexport default function FlowDiagram() {\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n\n  const onConnect = useCallback(\n    (params) => setEdges(addEdge(params, edges)),\n    [edges]\n  );\n\n  const onNodesDelete = useCallback(\n    (deleted) => {\n      setEdges(\n        deleted.reduce((acc, node) => {\n          const incomers = getIncomers(node, nodes, edges);\n          const outgoers = getOutgoers(node, nodes, edges);\n          const connectedEdges = getConnectedEdges([node], edges);\n\n          const remainingEdges = acc.filter(\n            (edge) => !connectedEdges.includes(edge)\n          );\n\n          const createdEdges = incomers.flatMap(({ id: source }) =>\n            outgoers.map(({ id: target }) => ({\n              id: `${source}->${target}`,\n              source,\n              target,\n            }))\n          );\n\n          return [...remainingEdges, ...createdEdges];\n        }, edges)\n      );\n    },\n    [nodes, edges]\n  );\n\n  return (\n    <div className=\"w-full h-screen fixed top-9\">\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onNodesDelete={onNodesDelete}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        fitView\n        attributionPosition=\"top-right\"\n        nodeTypes={{ customNode1: CustomNode1, customNode2: CustomNode2 }}\n      >\n        <Background variant=\"dots\" gap={12} size={1} />\n      </ReactFlow>\n    </div>\n  );\n}\n"],"names":["CustomNode1","_ref","data","_jsxs","style","padding","border","borderRadius","backgroundColor","children","_jsx","marginBottom","label","width","height","cx","cy","r","fill","x1","y1","x2","y2","stroke","strokeWidth","x","y","Handle","type","position","CustomNode2","_ref2","initialNodes","id","initialEdges","source","target","FlowDiagram","nodes","setNodes","onNodesChange","useNodesState","edges","setEdges","onEdgesChange","useEdgesState","onConnect","useCallback","params","addEdge","onNodesDelete","deleted","reduce","acc","node","incomers","getIncomers","outgoers","getOutgoers","connectedEdges","getConnectedEdges","filter","edge","includes","flatMap","_ref3","map","_ref4","className","ReactFlow","fitView","attributionPosition","nodeTypes","customNode1","customNode2","Background","variant","gap","size"],"sourceRoot":""}